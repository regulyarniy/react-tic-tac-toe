{"version":3,"sources":["board.js","game.js","index.js"],"names":["Square","props","onClick","value","react_default","a","createElement","type","className","Row","squares","Board","i","row","col","_this$props","this","board_Square","key","rows","j","push","renderSquare","length","renderRow","board_Row","React","Component","calculateWinner","lines","_lines$i","Object","slicedToArray","b","c","Game","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","Array","fill","xIsNext","stepNumber","step","setState","_this$state","newHistory","slice","concat","_this2","_this$state2","current","winner","status","moves","map","moveState","moveIndex","desc","isCurrent","join","jumpTo","board_Board","handleClick","ReactDOM","render","game_Game","document","getElementById"],"mappings":"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","file":"static/js/main.ef4929f8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Square = (props) => {\n  const { onClick, value } = props;\n  return (\n    <button\n      type=\"button\"\n      className=\"square\"\n      onClick={onClick}\n    >\n      {value}\n    </button>\n  );\n};\n\nSquare.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst Row = (props) => {\n  const { squares } = props;\n  return (\n    <div\n      className=\"board-row\"\n    >\n      {squares}\n    </div>\n  );\n};\n\nRow.propTypes = {\n  squares: PropTypes.arrayOf(React.Component).isRequired,\n};\n\nexport default class Board extends React.Component {\n  renderSquare(i, row, col) {\n    const { squares, onClick } = this.props;\n    return (\n      <Square\n        key={i}\n        value={squares[i]}\n        onClick={() => onClick(i, row, col)}\n      />\n    );\n  }\n\n  static renderRow(i, squares) {\n    return (\n      <Row\n        key={i}\n        squares={squares}\n      />\n    );\n  }\n\n  render() {\n    const ROW_COUNT = 3;\n    const COLUMN_COUNT = 3;\n    const rows = [];\n    for (let i = 0; i < ROW_COUNT; i += 1) {\n      const squares = [];\n      for (let j = i * ROW_COUNT; j < i * ROW_COUNT + COLUMN_COUNT; j += 1) {\n        squares.push(this.renderSquare(j, i + 1, squares.length + 1));\n      }\n      rows.push(Board.renderRow(i, squares));\n    }\n    return (\n      <div>\n        {rows}\n      </div>\n    );\n  }\n}\n\nBoard.propTypes = {\n  squares: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Board from './board';\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(``),\n      }],\n      xIsNext: true,\n      stepNumber: 0,\n    };\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  handleClick(i, row, col) {\n    const { history, stepNumber, xIsNext } = this.state;\n    const newHistory = history.slice(0, stepNumber + 1);\n    const current = newHistory[stepNumber];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = xIsNext ? `X` : `O`;\n    this.setState({\n      history: newHistory.concat([{ squares, row, col }]),\n      stepNumber: newHistory.length,\n      xIsNext: !xIsNext,\n    });\n  }\n\n  render() {\n    const { history, stepNumber, xIsNext } = this.state;\n    const current = history[stepNumber];\n    const winner = calculateWinner(current.squares);\n    const status = winner\n      ? `Winner ${winner}`\n      : `Next player: ${xIsNext ? `X` : `O`}`;\n    const moves = history.map((moveState, moveIndex) => {\n      const desc = moveIndex\n        ? `Go to move #${moveIndex} (col:${moveState.col},row:${moveState.row})`\n        : `Go to game start`;\n      const isCurrent = moveIndex === stepNumber;\n      return (\n        <li className={isCurrent && `current`} key={moveState.squares.join(``)}>\n          <button type=\"button\" onClick={() => this.jumpTo(moveIndex)}>{desc}</button>\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i, row, col) => this.handleClick(i, row, col)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './game';\nimport './index.css';\n\nReactDOM.render(\n  <Game />,\n  document.getElementById(`root`),\n);\n"],"sourceRoot":""}